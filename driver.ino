// Generated by Proteus Visual Designer for Arduino

// Peripheral Configuration Code (Do Not Edit)
//---CONFIG_BEGIN---
#define EI_ARDUINO_INTERRUPTED_PIN
#pragma GCC push_options
#pragma GCC optimize ("Os")

#include "Adafruit_VL53L0X.h"
#include <EnableInterrupt.h>
Adafruit_VL53L0X lox = Adafruit_VL53L0X(); // for the TOF LIDAR
#include <SPI.h>
#include <SD.h> // For SD card
#include <Servo.h> // For the servos

File dataFile;

// Need to keep track of state
volatile int state = -2; // -1 - Soft reset (return to home), 0 - Reset and erase recording (return to home), 1 - Play Live, 2 - Record, 3 - Play Recording
volatile unsigned long time; // used for reset functionality
int speaker = 3; // PWM pin 3
Servo colOne;
Servo colTwo;
Servo colThree;
Servo colFour;
bool play = false;

void reset() {
  if(arduinoPinState > 0){
    // then we know that we pressed the button
    // start the timer
    time = millis();
    Serial.println("Pressed button");
  }else{
    // then we released the button.
    // check the time.
    if((millis() - time) >= 3000){
      // We need to reset state and erase the recording.
      Serial.print("Button pressed for: ");
      Serial.println(millis()-time);
      state = 0;
    }else{
      // Just a soft reset of state.
      Serial.print("Button pressed for: ");
      Serial.println(millis()-time);
      state = -1;
    }
    Serial.println("Released button");
  }
  state = 0;
  // need to implement hold down of this button as well.
  // Will need to invoke the timer to check the state of the button
}

void play_live() {
  state = 1;
}

void record() {
  state = 2;
}

void play_recording() {
  state = 3;
  // Play from the file on the sd
  
}


void setup() {
  // put your setup code here, to run once:
  //pinMode(speaker, OUTPUT);
  //myservo.attach(9);
  //myservo.writeMicroseconds(2000);
  // Used to setup interrup on any Arduino Pin.
  Serial.begin(9600);
  enableInterrupt(A1, reset, CHANGE); // Play Live
  enableInterrupt(A2, play_live, RISING); // Play Live
  //enableInterrupt(A2, record, RISING); // Record
  //enableInterrupt(A3, play_recording, RISING); // Play Recording
  SD.begin(8);
  colOne.attach(10);
  //colTwo.attach(9);
  //colThree.attach(6);
  //colFour.attach(5);
}

void loop() {
  // put your main code here, to run repeatedly:
  /*
   * First step will be to check the current mode switches.
  */
  //Serial.print("State is: ");
  //Serial.println(state);
  if(state == 0){
    // reset state
  }else if(state == 1){
    // play live state
  }else if(state == 2){
    // Record state
  }else if(state == 3){
    // Play Recording state
    // open the file for reading
    dataFile = SD.open("DATA.txt");
    if (dataFile) {
      // read from the file until there's nothing else in it:
      while (dataFile.available()) {
        char input = dataFile.read();
        switch(input){
          case '0':
            tone(speaker, 110, 250);
            colOne.write(60);
            delay(250);
            break;
          case '1':
            tone(speaker, 123.471, 250);
            colOne.write(150);
            delay(250);
            break;
        }
      }
      // close the file:
      dataFile.close();
    }
  }
  /*
  tone(speaker, 110, 1000);
  delay(1000);
  tone(speaker, 123.471, 1000);
  delay(1000);
  tone(speaker, 130.813, 1000);
  delay(1000);
  tone(speaker, 146.832, 1000);
  delay(1000);
  tone(speaker, 164.814, 1000);
  delay(1000);
  tone(speaker, 174.614, 1000);
  delay(1000);
  tone(speaker, 195.998, 1000);
  delay(1000);
  tone(speaker, 207.652, 1000);
  delay(1000);
  */
  /*
    for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
    }
    for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
      myservo.write(pos);              // tell servo to go to position in variable 'pos'
      delay(15);                       // waits 15ms for the servo to reach the position
    }
    */
}
